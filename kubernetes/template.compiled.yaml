apiVersion: v1
kind: Service
metadata:
  name: outline
  labels:
    app.kubernetes.io/part-of: outline
    app.kubernetes.io/name: outline
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app.kubernetes.io/part-of: outline
    app.kubernetes.io/name: outline
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: outline
  labels:
    app.kubernetes.io/part-of: outline
    app.kubernetes.io/component: server
    app.kubernetes.io/name: outline
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: outline
      app.kubernetes.io/component: server
      app.kubernetes.io/name: outline
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: outline
        app.kubernetes.io/component: server
        app.kubernetes.io/name: outline
    spec:
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
      initContainers:
      - name: setup
        image: outline
        args:
        - yarn
        - sequelize:migrate
        env:
        - name: NODE_ENV
          value: production
        - name: PORT
          value: '3000'
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: outline
              key: secretKey
        - name: UTILS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: outline
              key: utilsSecretKey
        - name: URL
          value: outline.con2.fi
        - name: REDIS_URL
          value: redis://redis-ha-haproxy.redis-ha.svc.cluster.local/11
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: outline
              key: awsAccessKeyId
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: outline
              key: awsSecretAccessKey
        - name: AWS_REGION
          value: eu-west-1
        - name: AWS_S3_UPLOAD_BUCKET_URL
          value: https://nonexistent.example.com
        - name: AWS_S3_UPLOAD_BUCKET_NAME
          value: nonexistent
        - name: AWS_S3_UPLOAD_MAX_SIZE
          value: '262144'
        - name: AWS_S3_ACL
          value: bucket-owner-full-control
        - name: KOMPASSI_BASE_URL
          value: https://kompassi.eu
        - name: KOMPASSI_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: outline
              key: kompassiClientId
        - name: KOMPASSI_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: outline
              key: kompassiClientSecret
        - name: POSTGRES_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: hostname
        - name: POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgres
              key: database
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        - name: POSTGRES_PORT
          value: '5432'
        - name: POSTGRES_SSL
          value: 'True'
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: outline
        image: outline
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: production
        - name: PORT
          value: '3000'
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: outline
              key: secretKey
        - name: UTILS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: outline
              key: utilsSecretKey
        - name: URL
          value: outline.con2.fi
        - name: REDIS_URL
          value: redis://redis-ha-haproxy.redis-ha.svc.cluster.local/11
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: outline
              key: awsAccessKeyId
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: outline
              key: awsSecretAccessKey
        - name: AWS_REGION
          value: eu-west-1
        - name: AWS_S3_UPLOAD_BUCKET_URL
          value: https://nonexistent.example.com
        - name: AWS_S3_UPLOAD_BUCKET_NAME
          value: nonexistent
        - name: AWS_S3_UPLOAD_MAX_SIZE
          value: '262144'
        - name: AWS_S3_ACL
          value: bucket-owner-full-control
        - name: KOMPASSI_BASE_URL
          value: https://kompassi.eu
        - name: KOMPASSI_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: outline
              key: kompassiClientId
        - name: KOMPASSI_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: outline
              key: kompassiClientSecret
        - name: POSTGRES_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: hostname
        - name: POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgres
              key: database
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        - name: POSTGRES_PORT
          value: '5432'
        - name: POSTGRES_SSL
          value: 'True'
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        readinessProbe:
          httpGet:
            path: /api/v3/status
            port: 3000
            httpHeaders:
            - name: Host
              value: outline.con2.fi
          initialDelaySeconds: 15
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /api/v3/status
            port: 3000
            httpHeaders:
            - name: Host
              value: outline.con2.fi
          initialDelaySeconds: 30
          periodSeconds: 30
        volumeMounts:
        - mountPath: /home/outline
          name: outline-temp
      volumes:
      - name: outline-temp
        emptyDir:
          medium: Memory
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: outline
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  tls:
  - secretName: ingress-letsencrypt
    hosts:
    - outline.con2.fi
  rules:
  - host: outline.con2.fi
    http:
      paths:
      - path: /
        backend:
          serviceName: outline
          servicePort: 3000
