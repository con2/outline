{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outline.fullname" . }}-postgres
  labels:
    {{- include "outline.postgres.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "outline.postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "outline.postgres.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      enableServiceLinks: false
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.fullname" . }}-postgres
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.fullname" . }}-postgres
                  key: password
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.port | quote }}
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "outline.fullname" . }}-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "outline.fullname" . }}-postgres
  labels:
    {{- include "outline.postgres.labels" . | nindent 4 }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.capacity }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "outline.fullname" . }}-postgres
  labels:
    {{- include "outline.postgres.labels" . | nindent 4 }}
spec:
  type: {{ .Values.postgres.service.type }}
  ports:
    - port: {{ .Values.postgres.service.port }}
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    {{- include "outline.postgres.selectorLabels" . | nindent 4 }}
{{- end }}